<local:PictureWindow x:Class="Zhai.PictureView.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Zhai.PictureView"
        xmlns:Controls="clr-namespace:Zhai.PictureView.Controls"
        Title=" ZHAI PictureView" Style="{StaticResource PictureWindow}"
        WindowStartupLocation ="CenterScreen"
        Height="720" Width="960"
        MinHeight="360" MinWidth="480"
        mc:Ignorable="d">
    <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="PictureListViewStates">
            <VisualStateGroup.Transitions>
                <VisualTransition From="PictureListViewHide" To="PictureListViewShow">
                    <Storyboard>
                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="PictureListView">
                            <EasingThicknessKeyFrame Value="0" KeyTime="0:0:0.4">
                                <EasingThicknessKeyFrame.EasingFunction>
                                    <SineEase EasingMode="EaseOut" />
                                </EasingThicknessKeyFrame.EasingFunction>
                            </EasingThicknessKeyFrame>
                        </ThicknessAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualTransition>
                <VisualTransition From="PictureListViewShow" To="PictureListViewHide">
                    <Storyboard>
                        <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="PictureListView" Duration="0:0:0.4">
                            <ThicknessAnimation.EasingFunction>
                                <SineEase EasingMode="EaseOut" />
                            </ThicknessAnimation.EasingFunction>
                        </ThicknessAnimation>
                    </Storyboard>
                </VisualTransition>
            </VisualStateGroup.Transitions>
            <VisualState x:Name="PictureListViewShow">
                <Storyboard>
                    <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="PictureListView" To="0" Duration="0"/>
                </Storyboard>
            </VisualState>
            <VisualState x:Name="PictureListViewHide">
                <Storyboard>
                    <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="PictureListView" Duration="0"/>
                </Storyboard>
            </VisualState>
        </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
    <local:PictureWindow.TitleBar>
        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" 
                    Visibility="{Binding CurrentPicture, Converter={StaticResource NullableToVisibilityConverter}}">
            <TextBlock Text=" : "/>
            <TextBlock Text="{Binding CurrentPicture.Name}"/>
            <TextBlock Text=" ( "/>
            <TextBlock Text="{Binding CurrentPicture.Size, Converter={StaticResource ByteFormatter}}"/>
            <TextBlock Text=" , "/>
            <TextBlock Text="{Binding CurrentPicture.PixelWidth}"/>
            <TextBlock Text="x"/>
            <TextBlock Text="{Binding CurrentPicture.PixelHeight}"/>
            <TextBlock Text=" 像素 )"/>
            <TextBlock Text=" - "/>
            <TextBlock Text="{Binding DisplayedPictureIndex}"/>
            <TextBlock Text="/"/>
            <TextBlock Text="{Binding Folder.Count}"/>
        </StackPanel>
    </local:PictureWindow.TitleBar>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="36"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.ColumnSpan="2" Grid.Row="0"/>
        <Grid Grid.Column="0" Grid.Row="1" x:Name="PictureListView" Width="110" Margin="-110 0 0 0">
            <Border Padding="5 0 0 0" Margin="0 0 3 0">
                <ListBox x:Name="PictureList"
                         ItemsSource="{Binding Folder}" 
                         Background="Transparent" BorderThickness="0"
                         VirtualizingPanel.ScrollUnit="Pixel"
                         VirtualizingPanel.VirtualizationMode="Recycling"
                         VirtualizingPanel.IsVirtualizing="True"
                         VirtualizingPanel.IsContainerVirtualizable="True"
                         VirtualizingPanel.CacheLengthUnit="Page"
                         ScrollViewer.CanContentScroll="True"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         SelectedItem="{Binding CurrentPicture}"
                         SelectedIndex="{Binding CurrentPictureIndex}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsItemsHost="True"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Image Stretch="UniformToFill" Source="{Binding ThumbSource}" ToolTip="{Binding Name}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Margin" Value="3"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="Center" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" Value="DeepSkyBlue"/>
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="BorderBrush" Value="DeepSkyBlue"/>
                                                <Setter Property="BorderThickness" Value="2"/>
                                                <Setter Property="Margin" Value="2"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </Border>
        </Grid>
        <Grid Grid.Column="1" Grid.Row="1">
            <!--大图-->
            <Canvas x:Name="PictureBox" 
                    RenderTransformOrigin="0.5,0.5" ClipToBounds="True"
                    Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid}}" 
                    Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}"
                    Background="Transparent">
                <Canvas.RenderTransform>
                    <RotateTransform Angle="{Binding RotateAngle}" />
                </Canvas.RenderTransform>
                <Image x:Name="Picture" Canvas.Top="0" Canvas.Left="0"/>
            </Canvas>
            <!--小图-->
            <Grid x:Name="ThumbContainer" 
                  VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="2" 
                  Visibility="{Binding Scale, Converter={StaticResource ThumbBoxVisibilityConverter}}"
                  IsHitTestVisible="{Binding IsPictureMoving, Converter={StaticResource BoolToInverseBoolConverter}}">
                <Border Width="168" Height="168" BorderThickness="4" Background="Black" BorderBrush="#CC000000" ClipToBounds="True">
                    <Canvas x:Name="ThumbBox" MouseMove="MoveRect_MouseMove" RenderTransformOrigin="0.5,0.5" ClipToBounds="True">
                        <Canvas.RenderTransform>
                            <RotateTransform Angle="{Binding RotateAngle}" />
                        </Canvas.RenderTransform>
                        <Canvas.Background>
                            <ImageBrush ImageSource="{Binding ElementName=Picture, Path=Source}" Stretch="Uniform" TileMode="None"/>
                        </Canvas.Background>
                        <Rectangle x:Name="MoveRect" Stroke="White" Canvas.Top="0" Canvas.Left="0"/>
                    </Canvas>
                </Border>
                <Grid x:Name="ThumbBoxMask" IsHitTestVisible="False"
                      Width="{Binding ElementName=ThumbBox, Path=ActualWidth}" Height="{Binding ElementName=ThumbBox, Path=ActualHeight}"
                      VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Background" Value="#70000000"/>
                        </Style>
                    </Grid.Resources>
                    <Border Grid.Row="0" Grid.Column="0"/>
                    <Border Grid.Row="1" Grid.Column="0"/>
                    <Border Grid.Row="2" Grid.Column="0"/>
                    <Border Grid.Row="0" Grid.Column="1"/>
                    <Border Grid.Row="1" Grid.Column="1" Background="Transparent"/>
                    <Border Grid.Row="2" Grid.Column="1"/>
                    <Border Grid.Row="0" Grid.Column="2"/>
                    <Border Grid.Row="1" Grid.Column="2"/>
                    <Border Grid.Row="2" Grid.Column="2"/>
                </Grid>
            </Grid>
            <!--图片比例提示-->
            <Border x:Name="ScaleTips" 
                    VerticalAlignment="Center" HorizontalAlignment="Center" 
                    Background="#B3000000" Opacity="0" Padding="16 8" 
                    CornerRadius="20" IsHitTestVisible="False">
                <TextBlock Text="{Binding Scale, Converter={StaticResource ScaleTipsConverter}}" FontWeight="Regular" FontSize="16" Foreground="#FFFFFF"/>
            </Border>
            <!--打开图片按钮-->
            <Border x:Name="OpenButton2"
                    Visibility="{Binding CurrentPicture, Converter={StaticResource NullableToInverseVisibilityConverter}}"
                    VerticalAlignment="Center" HorizontalAlignment="Center">
                <StackPanel>
                    <Button Style="{StaticResource PictureView.IconButton}"
                            Width="100" Height="40" HorizontalAlignment="Center"
                            Margin="0 0 0 30" Click="OpenButton_Click"
                            FontSize="20"
                            FontWeight="Light"
                            Content="打开图片"/>
                    <TextBlock Text="还没有图片被加载 , 请先选择一张图片" FontSize="12" HorizontalAlignment="Center" FontWeight="Light"/>
                </StackPanel>
            </Border>
            <!--左右翻页按钮-->
            <Border x:Name="PageButton"
                    Visibility="{Binding CurrentPicture, Converter={StaticResource NullableToVisibilityConverter}}">
                <Grid>
                    <Button Style="{StaticResource PictureView.IconButton4}" Click="PrevButton_Click" ToolTip="上一张"
                            VerticalAlignment="Center" HorizontalAlignment="Left" Margin="24">
                        <Path Data="{StaticResource Icon.ChevronLeft}"/>
                    </Button>
                    <Button Style="{StaticResource PictureView.IconButton4}" Click="NextButton_Click" ToolTip="下一张"
                            VerticalAlignment="Center" HorizontalAlignment="Right" Margin="24">
                        <Path Data="{StaticResource Icon.ChevronRight}"/>
                    </Button>
                </Grid>
            </Border>
            <!--Loading-->
            <Border x:Name="Loading" 
                    Visibility="{Binding CurrentPicture, Converter={StaticResource NullableToVisibilityConverter}}"
                    Panel.ZIndex="100" IsHitTestVisible="False"
                    VerticalAlignment="Center" HorizontalAlignment="Center">
                <Controls:Loading Visibility="{Binding CurrentPicture.PictureState, Converter={StaticResource LoadingVisibilityConverter}}" />
            </Border>
        </Grid>
        <Grid Grid.ColumnSpan="2" Grid.Row="2">
            <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Orientation="Horizontal" Margin="8">
                <StackPanel Orientation="Horizontal" IsEnabled="{Binding CurrentPicture, Converter={StaticResource NullableToBoolConverter}}">
                    <Button x:Name="PictureListViewToggleButton" Click="PictureListViewToggleButton_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource PictureView.IconButton}">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Path Data="{StaticResource Icon.ToggleRight}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="ToolTip" Value="显示缩略图列表"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsShowPictureListView}" Value="True">
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <Path Data="{StaticResource Icon.ToggleLeft}"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="ToolTip" Value="关闭缩略图列表"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </StackPanel>

            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal" Margin="8">
                <Button Style="{StaticResource PictureView.IconButton}" x:Name="OpenButton" Click="OpenButton_Click" ToolTip="打开">
                    <Path Data="{StaticResource Icon.Open}"/>
                </Button>
                <StackPanel x:Name="ControlPanel" Orientation="Horizontal" IsEnabled="{Binding CurrentPicture, Converter={StaticResource NullableToBoolConverter}}">
                    <Button x:Name="ZoomQuickButton" Click="ZoomQuickButton_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource PictureView.IconButton}">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Path Data="{StaticResource Icon.Adapt}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="ToolTip" Value="适应屏幕"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Scale}" Value="1.0">
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <Path Data="{StaticResource Icon.Origin}"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="ToolTip" Value="原图大小"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Style="{StaticResource PictureView.IconButton}" x:Name="ZoomInButton" Click="ZoomInButton_Click" ToolTip="放大">
                        <Path Data="{StaticResource Icon.ZoomPlus}"/>
                    </Button>
                    <Button Style="{StaticResource PictureView.IconButton}" x:Name="ZoomOutButton" Click="ZoomOutButton_Click" ToolTip="缩小">
                        <Path Data="{StaticResource Icon.ZoomMinus}"/>
                    </Button>
                    <Button Style="{StaticResource PictureView.IconButton}" x:Name="RotateLeftButton" Click="RotateLeftButton_Click" ToolTip="左转90度">
                        <Path Data="{StaticResource Icon.RotateLeft}"/>
                    </Button>
                    <Button Style="{StaticResource PictureView.IconButton}" x:Name="RotateRightButton" Click="RotateRightButton_Click" ToolTip="右转90度">
                        <Path Data="{StaticResource Icon.RotateRight}"/>
                    </Button>
                    <Button Style="{StaticResource PictureView.IconButton}" x:Name="PrevButton" Click="PrevButton_Click" ToolTip="上一张">
                        <Path Data="{StaticResource Icon.ArrowLeft}"/>
                    </Button>
                    <Button Style="{StaticResource PictureView.IconButton}" x:Name="NextButton" Click="NextButton_Click" ToolTip="下一张">
                        <Path Data="{StaticResource Icon.ArrowRight}"/>
                    </Button>
                    <Button Style="{StaticResource PictureView.IconButton}" x:Name="DeleteButton" Click="DeleteButton_Click" ToolTip="删除">
                        <Path Data="{StaticResource Icon.Delete}"/>
                    </Button>
                    <Button Style="{StaticResource PictureView.IconButton}" x:Name="AdjustButton" Click="DeleteButton_Click"  ToolTip="调整">
                        <Path Data="{StaticResource Icon.Adjust}"/>
                    </Button>
                </StackPanel>
            </StackPanel>
        </Grid>
    </Grid>

</local:PictureWindow>
